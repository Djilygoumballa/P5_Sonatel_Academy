return(F)
}
}
validdate("          Tuesday 07/mars/2023")
.Primitive("c")
validdate<- function(date){
#,"-"="/","_"="/",","="/","\\|"="/",":"="/","."="/"
date<- trimws(date)
date<- str_replace_all(date,c("fev"="02","mars"="03","decembre"="12"))
date<- str_replace_all(date,c(" "="/","-"="/",","="/","_"="/","\\|"="/",":"="/","\\."="/"))
if(!is.na(as.Date(date,format("%d/%m/%Y")))){
return(date)
}else{
return(F)
}
}
validdate("          01.mars.2004")
validdate("          01.mar.2004")
validdate<- function(date){
#,"-"="/","_"="/",","="/","\\|"="/",":"="/","."="/"
date<- trimws(date)
date<- str_replace_all(date,c("fev"="02","mars"="03","decembre"="12"))
date<- str_replace_all(date,c(" "="/","-"="/",","="/","_"="/","\\|"="/",":"="/","\\."="/"))
if(!is.na(as.Date(date,format("%d/%m/%y")))){
return(date)
}else{
return(F)
}
}
validdate("          01.mar.2004")
validdate<- function(date){
#,"-"="/","_"="/",","="/","\\|"="/",":"="/","."="/"
date<- trimws(date)
date<- str_replace_all(date,c("fev"="02","mars"="03","decembre"="12"))
date<- str_replace_all(date,c(" "="/","-"="/",","="/","_"="/","\\|"="/",":"="/","\\."="/"))
if(!is.na(as.Date(date,format("%d/%m/%y","%d/%m/%Y")))){
return(date)
}else{
return(F)
}
}
validdate("          01.mar.2004")
validdate<- function(date){
#,"-"="/","_"="/",","="/","\\|"="/",":"="/","."="/"
date<- trimws(date)
date<- str_replace_all(date,c("fev"="02","mars"="03","decembre"="12"))
date<- str_replace_all(date,c(" "="/","-"="/",","="/","_"="/","\\|"="/",":"="/","\\."="/"))
if(!is.na(as.Date(date,format("%d/%m/%y")))){
return(date)
}else{
return(F)
}
}
validdate("          01.mar.2004")
validdate<- function(date){
#,"-"="/","_"="/",","="/","\\|"="/",":"="/","."="/"
date<- trimws(date)
date<- str_replace_all(date,c("fev"="02","mars"="03","decembre"="12"))
date<- str_replace_all(date,c(" "="/","-"="/",","="/","_"="/","\\|"="/",":"="/","\\."="/"))
if(!is.na(as.Date(date,format("%d/%m/%y")))){
return(date)
}else{
return(F)
}
}
validdate("          01.mars.2004")
validdate("          01.mars.04")
validdate<- function(date){
#,"-"="/","_"="/",","="/","\\|"="/",":"="/","."="/"
date<- trimws(date)
date<- str_replace_all(date,c("fev"="02","mars"="03","decembre"="12"))
date<- str_replace_all(date,c(" "="/","-"="/",","="/","_"="/","\\|"="/",":"="/","\\."="/"))
if(!is.na(as.Date(date,format("%d/%m/%Y")))){
return(date)
}else{
return(F)
}
}
validdate("          01.mars.04")
validdate<- function(date){
#,"-"="/","_"="/",","="/","\\|"="/",":"="/","."="/"
date<- trimws(date)
date<- str_replace_all(date,c("fev"="02","mars"="03","decembre"="12"))
date<- str_replace_all(date,c(" "="/","-"="/",","="/","_"="/","\\|"="/",":"="/","\\."="/"))
if(!is.na(as.Date(date,format("%d/%m/%Y")))){
return(date)
}else{
return(F)
}
}
validdate("          01.mars.2004")
str_replace_all("d","j","djily")
str_replace_all("d","j","djily")
str_replace_all("s","j","djily")
str_replace_all("s","djily")
str_replace_all("s","j","djily")
str_replace_all(djily,"s","j")
sr<-"djily"
str_replace_all(sr,"s","j")
validdate("          01.mars.2004")
validdate("          01.avril.2004")
validdate<- function(date){
#,"-"="/","_"="/",","="/","\\|"="/",":"="/","."="/"
date<- trimws(date)
date<- str_replace_all(date,c("fev"="02","mars"="03","decembre"="12"))
date<- str_replace_all(date,c(" "="/","-"="/",","="/","_"="/","\\|"="/",":"="/","\\."="/"))
if(!is.na(as.Date(date,format("%d/%B/%Y")))){
return(date)
}else{
return(F)
}
}
validdate("          01.avril.2004")
validdate<- function(date){
#,"-"="/","_"="/",","="/","\\|"="/",":"="/","."="/"
date<- trimws(date)
date<- str_replace_all(date,c("fev"="02","mars"="03","decembre"="12"))
date<- str_replace_all(date,c(" "="/","-"="/",","="/","_"="/","\\|"="/",":"="/","\\."="/"))
date<-- (as.Date(date,format("%d/%B/%Y")))
if(!is.na(date)){
return(date)
}else{
return(F)
}
}
validdate("          01.avril.2004")
validdate("          01.mars.2004")
validdate<- function(date){
#,"-"="/","_"="/",","="/","\\|"="/",":"="/","."="/"
date<- trimws(date)
date<- str_replace_all(date,c("fev"="02","mars"="03","decembre"="12"))
date<- str_replace_all(date,c(" "="/","-"="/",","="/","_"="/","\\|"="/",":"="/","\\."="/"))
date<-- (as.Date(date,format("%d-%B-%Y")))
if(!is.na(date)){
return(date)
}else{
return(F)
}
}
validdate("          01.mars.2004")
validdate<- function(date){
#,"-"="/","_"="/",","="/","\\|"="/",":"="/","."="/"
date<- trimws(date)
date<- str_replace_all(date,c("fev"="02","mars"="03","decembre"="12"))
date<- str_replace_all(date,c(" "="/","-"="/",","="/","_"="/","\\|"="/",":"="/","\\."="/"))
date<-- (as.Date(date,format("%d %B %Y")))
if(!is.na(date)){
return(date)
}else{
return(F)
}
}
validdate("          01.mars.2004")
validdate<- function(date){
#,"-"="/","_"="/",","="/","\\|"="/",":"="/","."="/"
date<- trimws(date)
date<- str_replace_all(date,c("fev"="02","mars"="03","decembre"="12"))
date<- str_replace_all(date,c(" "="/","-"="/",","="/","_"="/","\\|"="/",":"="/","\\."="/"))
date<-- as.Date(date,format("%d %B %Y"))
if(!is.na(date)){
return(date)
}else{
return(F)
}
}
validdate("          01.mars.2004")
validdate<- function(date){
#,"-"="/","_"="/",","="/","\\|"="/",":"="/","."="/"
date<- trimws(date)
date<- str_replace_all(date,c("fev"="02","mars"="03","decembre"="12"))
date<- str_replace_all(date,c(" "="/","-"="/",","="/","_"="/","\\|"="/",":"="/","\\."="/"))
date<-- as.Date(date,format("%d/%m/%Y"))
if(!is.na(date)){
return(date)
}else{
return(F)
}
}
validdate("          01.mars.2004")
validdate<- function(date){
#,"-"="/","_"="/",","="/","\\|"="/",":"="/","."="/"
date<- trimws(date)
date<- str_replace_all(date,c("fev"="02","mars"="03","decembre"="12"))
date<- str_replace_all(date,c(" "="/","-"="/",","="/","_"="/","\\|"="/",":"="/","\\."="/"))
date<-- as.Date(date,format("%d-%m-%Y"))
if(!is.na(date)){
return(date)
}else{
return(F)
}
}
validdate("          01.mars.2004")
validdate<- function(date){
#,"-"="/","_"="/",","="/","\\|"="/",":"="/","."="/"
date<- trimws(date)
date<- str_replace_all(date,c("fev"="02","mars"="03","decembre"="12"))
date<- str_replace_all(date,c(" "="/","-"="/",","="/","_"="/","\\|"="/",":"="/","\\."="-"))
date<-- as.Date(date,format("%d-%m-%Y"))
if(!is.na(date)){
return(date)
}else{
return(F)
}
}
validdate("          01.mars.2004")
validdate<- function(date){
#,"-"="/","_"="/",","="/","\\|"="/",":"="/","."="/"
date<- trimws(date)
date<- str_replace_all(date,c("fev"="02","mars"="03","decembre"="12"))
date<- str_replace_all(date,c(" "="/","-"="/",","="/","_"="/","\\|"="/",":"="/","\\."="/"))
if(!is.na(as.Date(date,format("%d/%B/%Y")))){
return(date)
}else{
return(F)
}
}
validdate("          01.avril.2004")
validdate("          01.mars.2004")
validdate<- function(date){
#,"-"="/","_"="/",","="/","\\|"="/",":"="/","."="/"
date<- trimws(date)
date<- str_replace_all(date,c("fev"="02","mars"="03","decembre"="12"))
date<- str_replace_all(date,c(" "="/","-"="/",","="/","_"="/","\\|"="/",":"="/","\\."="/"))
if(!is.na(as.Date(date,format("%d/%m/%Y")))){
return(date)
}else{
return(F)
}
}
validdate("          01.mars.2004")
validnote<- function(note){
note<- str_split(note,"#")
}
a<-"Math[11|13:06] #Francais[08|17:12] #Anglais[13|13:12] #PC[09|18:07] #SVT[15|10:10] #HG[14|19:17]"
validnote(a)
validnote<- function(note){
note<- str_split(note,"#")
}
a<-"Math[11|13:06] #Francais[08|17:12] #Anglais[13|13:12] #PC[09|18:07] #SVT[15|10:10] #HG[14|19:17]"
validnote(a)
validnote<- function(note){
note<- str_split(note,"#")
return(note)
}
a<-"Math[11|13:06] #Francais[08|17:12] #Anglais[13|13:12] #PC[09|18:07] #SVT[15|10:10] #HG[14|19:17]"
validnote(a)
validnote<- function(note){
note<- str_split(note,"#")
return(note)
}
a<-"Math[11|13:06] #Francais[08|17:12] #Anglais[13|13:12] #PC[09|18:07] #SVT[15|10:10] #HG[14|19:17]"
b<-validnote(a)
b
length(b)
len(b)
b[1]
b[[1]]
typeof(b)
length(b[1])
b(b[1])
x <- c("a","a","b","c")
X <- matrix(1:8,ncol=4)
s <- c(T,T,T,F,F)
z <- matrix(c("A","B","C","D"),ncol=2)
maliste=list(comp1=x,comp2=X,comp3=s,element4=z)
maliste
maliste[2]
length(maliste[2])
maliste[[1]]
length(maliste[[1]])
maliste["comp3"]
(b[[1]])
b[[2]]
maliste<- list(c("A","B","C"),matrix(1:4,2,2))
maliste
length(maliste)
mode(maliste)
is.list(maliste)
li<- list()
li
li[[1]]<- 1:4
li
li$nouv<- matrix(1:4,nrow=2)
li
names(li)
attributes(li)
li$nouv
li[[1]]
b$[1]
b[2]
b[1][1]
b[1][1][[1]]
b[1][1][[1]][1]
c=b[1][1]
d=c[[1]]
d[1]
validnote<- function(note){
note<- str_split(note,"#")
note<- str_replace_all(note,c("\\["=":","\\|"=":","]"=":",";"=":",","="."))
# c=nott[1][1]
# # d=c[[1]]
# #
return(note)
}
a<-"Math[11|13:06] #Francais[08|17:12] #Anglais[13|13:12] #PC[09|18:07] #SVT[15|10:10] #HG[14|19:17]"
b<-validnote(a)
b
validnote<- function(note){
note<- str_split(note,"#")
note<- str_replace_all(note,c("\\["=":","\\|"=":","]"=":",";"=":",","="."))
note<- str_split(note,":")
# c=nott[1][1]
# # d=c[[1]]
# #
return(note)
}
a<-"Math[11|13:06] #Francais[08|17:12] #Anglais[13|13:12] #PC[09|18:07] #SVT[15|10:10] #HG[14|19:17]"
b<-validnote(a)
b
validnote<- function(note){
note<- str_split(note,"#")
note<- str_replace_all(note,c("["=":","\\|"=":","]"=":",";"=":",","="."))
note<- str_split(note,":")
# c=nott[1][1]
# # d=c[[1]]
# #
return(note)
}
a<-"Math[11|13:06] #Francais[08|17:12] #Anglais[13|13:12] #PC[09|18:07] #SVT[15|10:10] #HG[14|19:17]"
b<-validnote(a)
b
kl<- "rdes"
kl(1,1)
substring(kl,1,1)
substring(kl,1,2)
substring(kl,2,2)
substring(kl,3,3)
substring(kl,1)
substring(kl,2)
substring(kl,1)
a<-"Math[11|13:06] #Francais[08|17:12] #Anglais[13|13:12] #PC[09|18:07] #SVT[15|10:10] #HG[14|19:17]"
b<-validnote(a)
for(n in b){
print(n[1])
}
validnote<- function(note){
note<- str_split(note,"#")
# note<- str_replace_all(note,c("["=":","\\|"=":","]"=":",";"=":",","="."))
# note<- str_split(note,":")
# c=nott[1][1]
# # d=c[[1]]
# #
return(note)
}
a<-"Math[11|13:06] #Francais[08|17:12] #Anglais[13|13:12] #PC[09|18:07] #SVT[15|10:10] #HG[14|19:17]"
b<-validnote(a)
b
for(n in b){
print(n[1])
}
for(n in b){
print([1])
for(n in b){
print(1)
}
for(n in b){
print(n)
}
for(n in b){
print(n[1])
}
for(n in b){
print(n[1])
}
validnote<- function(note){
note<- str_split(note,"#")
for(mariere in note){
note<- str_replace_all(matiere,c("["=":","\\|"=":","]"=":",";"=":",","="."))
note<- str_split(note,":")
}
# note<- str_replace_all(note,c("["=":","\\|"=":","]"=":",";"=":",","="."))
# note<- str_split(note,":")
# c=nott[1][1]
# # d=c[[1]]
# #
return(note)
}
a<-"Math[11|13:06] #Francais[08|17:12] #Anglais[13|13:12] #PC[09|18:07] #SVT[15|10:10] #HG[14|19:17]"
b<-validnote(a)
b
validnote<- function(note){
note<- str_split(note,"#")
for(mariere in note){
note<- str_replace_all(matiere,c("\\["=":","\\|"=":","]"=":",";"=":",","="."))
note<- str_split(note,":")
return(note)
}
# note<- str_replace_all(note,c("["=":","\\|"=":","]"=":",";"=":",","="."))
# note<- str_split(note,":")
# c=nott[1][1]
# # d=c[[1]]
# #
}
a<-"Math[11|13:06] #Francais[08|17:12] #Anglais[13|13:12] #PC[09|18:07] #SVT[15|10:10] #HG[14|19:17]"
b<-validnote(a)
validnote<- function(note){
note<- str_split(note,"#")
for(i in note){
note<- str_replace_all(i,c("\\["=":","\\|"=":","]"=":",";"=":",","="."))
note<- str_split(note,":")
return(note)
}
# note<- str_replace_all(note,c("["=":","\\|"=":","]"=":",";"=":",","="."))
# note<- str_split(note,":")
# c=nott[1][1]
# # d=c[[1]]
# #
}
a<-"Math[11|13:06] #Francais[08|17:12] #Anglais[13|13:12] #PC[09|18:07] #SVT[15|10:10] #HG[14|19:17]"
b<-validnote(a)
b
a<-"Math[11|13:06]#Francais[08|17:12] #Anglais[13|13:12] #PC[09|18:07] #SVT[15|10:10] #HG[14|19:17]"
b<-validnote(a)
b
for(n in b){
print(n[1])
length(n[1])
}
for(n in b){
print(n[1])
length(n[1])
}
validnote<- function(note){
note<- str_split(note,"#")
# for(i in note){
#   note<- str_replace_all(i,c("\\["=":","\\|"=":","]"=":",";"=":",","="."))
#   note<- str_split(note,":")
return(note)
# note<- str_replace_all(note,c("["=":","\\|"=":","]"=":",";"=":",","="."))
# note<- str_split(note,":")
# c=nott[1][1]
# # d=c[[1]]
# #
}
a<-"Math[11|13:06]#Francais[08|17:12] #Anglais[13|13:12] #PC[09|18:07] #SVT[15|10:10] #HG[14|19:17]"
b<-validnote(a)
b
for(n in b){
length(n[1])
}
for(n in b){
print(length(n[1]))
}
for(n in b){
print((n[1]))
}
for(n in b){
print((n[1]))
length(n[1])
}
for(n in b){
print((n[1]))
length(n[[1]])
}
for(n in b){
print((n[1]))
print(length(n[[1]]))
}
validnote<- function(note){
note<- str_split(note,"#")
length(note[[1]])
# for(i in note){
#   note<- str_replace_all(i,c("\\["=":","\\|"=":","]"=":",";"=":",","="."))
#   note<- str_split(note,":")
return(note)
# note<- str_replace_all(note,c("["=":","\\|"=":","]"=":",";"=":",","="."))
# note<- str_split(note,":")
# c=nott[1][1]
# # d=c[[1]]
# #
}
validnote<- function(note){
note<- str_split(note,"#")
print(length(note[[1]]))
# for(i in note){
#   note<- str_replace_all(i,c("\\["=":","\\|"=":","]"=":",";"=":",","="."))
#   note<- str_split(note,":")
return(note)
# note<- str_replace_all(note,c("["=":","\\|"=":","]"=":",";"=":",","="."))
# note<- str_split(note,":")
# c=nott[1][1]
# # d=c[[1]]
# #
}
a<-"Math[11|13:06]#Francais[08|17:12] #Anglais[13|13:12] #PC[09|18:07] #SVT[15|10:10] #HG[14|19:17]"
b<-validnote(a)
validnote<- function(note){
note<- str_split(note,"#")
print(length(note[[1]]))
print(note[[1]][1])
# for(i in note){
#   note<- str_replace_all(i,c("\\["=":","\\|"=":","]"=":",";"=":",","="."))
#   note<- str_split(note,":")
return(note)
# note<- str_replace_all(note,c("["=":","\\|"=":","]"=":",";"=":",","="."))
# note<- str_split(note,":")
# c=nott[1][1]
# # d=c[[1]]
# #
}
a<-"Math[11|13:06]#Francais[08|17:12] #Anglais[13|13:12] #PC[09|18:07] #SVT[15|10:10] #HG[14|19:17]"
b<-validnote(a)
